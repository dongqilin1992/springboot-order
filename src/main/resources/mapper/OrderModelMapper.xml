<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd" >
<mapper namespace="com.dongqilin.mapper.OrderModelMapper" >
  <resultMap id="BaseResultMap" type="com.dongqilin.entity.OrderModel" >
    <id column="id" property="id" jdbcType="INTEGER" />
    <result column="user_id" property="userId" jdbcType="INTEGER" />
    <result column="order_number" property="orderNumber" jdbcType="VARCHAR" />
    <result column="uid" property="uid" jdbcType="INTEGER" />
    <result column="pay_price" property="payPrice" jdbcType="DOUBLE" />
    <result column="is_pay" property="isPay" jdbcType="TINYINT" />
    <result column="pay_time" property="payTime" jdbcType="INTEGER" />
    <result column="is_ship" property="isShip" jdbcType="TINYINT" />
    <result column="ship_time" property="shipTime" jdbcType="INTEGER" />
    <result column="is_receipt" property="isReceipt" jdbcType="TINYINT" />
    <result column="receipt_time" property="receiptTime" jdbcType="INTEGER" />
    <result column="ship_nmber" property="shipNmber" jdbcType="VARCHAR" />
    <result column="status" property="status" jdbcType="TINYINT" />
    <result column="create_time" property="createTime" jdbcType="INTEGER" />
    <result column="update_time" property="updateTime" jdbcType="INTEGER" />
  </resultMap>
  <sql id="Example_Where_Clause" >
    <where >
      <foreach collection="oredCriteria" item="criteria" separator="or" >
        <if test="criteria.valid" >
          <trim prefix="(" suffix=")" prefixOverrides="and" >
            <foreach collection="criteria.criteria" item="criterion" >
              <choose >
                <when test="criterion.noValue" >
                  and ${criterion.condition}
                </when>
                <when test="criterion.singleValue" >
                  and ${criterion.condition} #{criterion.value}
                </when>
                <when test="criterion.betweenValue" >
                  and ${criterion.condition} #{criterion.value} and #{criterion.secondValue}
                </when>
                <when test="criterion.listValue" >
                  and ${criterion.condition}
                  <foreach collection="criterion.value" item="listItem" open="(" close=")" separator="," >
                    #{listItem}
                  </foreach>
                </when>
              </choose>
            </foreach>
          </trim>
        </if>
      </foreach>
    </where>
  </sql>
  <sql id="Base_Column_List" >
    id, user_id, order_number, uid, pay_price, is_pay, pay_time, is_ship, ship_time, 
    is_receipt, receipt_time, ship_nmber, status, create_time, update_time
  </sql>
  <select id="selectByPrimaryKey" resultMap="BaseResultMap" parameterType="java.lang.Integer" >
    select 
    <include refid="Base_Column_List" />
    from t_order
    where id = #{id,jdbcType=INTEGER}
  </select>
  <delete id="deleteByPrimaryKey" parameterType="java.lang.Integer" >
    delete from t_order
    where id = #{id,jdbcType=INTEGER}
  </delete>
  <insert id="insert" parameterType="com.dongqilin.entity.OrderModel" >
    insert into t_order (id, user_id, order_number, 
      uid, pay_price, is_pay, 
      pay_time, is_ship, ship_time, 
      is_receipt, receipt_time, ship_nmber, 
      status, create_time, update_time
      )
    values (#{id,jdbcType=INTEGER}, #{userId,jdbcType=INTEGER}, #{orderNumber,jdbcType=VARCHAR}, 
      #{uid,jdbcType=INTEGER}, #{payPrice,jdbcType=DOUBLE}, #{isPay,jdbcType=TINYINT}, 
      #{payTime,jdbcType=INTEGER}, #{isShip,jdbcType=TINYINT}, #{shipTime,jdbcType=INTEGER}, 
      #{isReceipt,jdbcType=TINYINT}, #{receiptTime,jdbcType=INTEGER}, #{shipNmber,jdbcType=VARCHAR}, 
      #{status,jdbcType=TINYINT}, #{createTime,jdbcType=INTEGER}, #{updateTime,jdbcType=INTEGER}
      )
  </insert>
  <insert id="insertSelective" parameterType="com.dongqilin.entity.OrderModel" >
    insert into t_order
    <trim prefix="(" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        id,
      </if>
      <if test="userId != null" >
        user_id,
      </if>
      <if test="orderNumber != null" >
        order_number,
      </if>
      <if test="uid != null" >
        uid,
      </if>
      <if test="payPrice != null" >
        pay_price,
      </if>
      <if test="isPay != null" >
        is_pay,
      </if>
      <if test="payTime != null" >
        pay_time,
      </if>
      <if test="isShip != null" >
        is_ship,
      </if>
      <if test="shipTime != null" >
        ship_time,
      </if>
      <if test="isReceipt != null" >
        is_receipt,
      </if>
      <if test="receiptTime != null" >
        receipt_time,
      </if>
      <if test="shipNmber != null" >
        ship_nmber,
      </if>
      <if test="status != null" >
        status,
      </if>
      <if test="createTime != null" >
        create_time,
      </if>
      <if test="updateTime != null" >
        update_time,
      </if>
    </trim>
    <trim prefix="values (" suffix=")" suffixOverrides="," >
      <if test="id != null" >
        #{id,jdbcType=INTEGER},
      </if>
      <if test="userId != null" >
        #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        #{uid,jdbcType=INTEGER},
      </if>
      <if test="payPrice != null" >
        #{payPrice,jdbcType=DOUBLE},
      </if>
      <if test="isPay != null" >
        #{isPay,jdbcType=TINYINT},
      </if>
      <if test="payTime != null" >
        #{payTime,jdbcType=INTEGER},
      </if>
      <if test="isShip != null" >
        #{isShip,jdbcType=TINYINT},
      </if>
      <if test="shipTime != null" >
        #{shipTime,jdbcType=INTEGER},
      </if>
      <if test="isReceipt != null" >
        #{isReceipt,jdbcType=TINYINT},
      </if>
      <if test="receiptTime != null" >
        #{receiptTime,jdbcType=INTEGER},
      </if>
      <if test="shipNmber != null" >
        #{shipNmber,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        #{updateTime,jdbcType=INTEGER},
      </if>
    </trim>
  </insert>
  <select id="countByExample" parameterType="com.dongqilin.entity.OrderModelExample" resultType="java.lang.Integer" >
    select count(*) from t_order
    <if test="_parameter != null" >
      <include refid="Example_Where_Clause" />
    </if>
  </select>
  <update id="updateByPrimaryKeySelective" parameterType="com.dongqilin.entity.OrderModel" >
    update t_order
    <set >
      <if test="userId != null" >
        user_id = #{userId,jdbcType=INTEGER},
      </if>
      <if test="orderNumber != null" >
        order_number = #{orderNumber,jdbcType=VARCHAR},
      </if>
      <if test="uid != null" >
        uid = #{uid,jdbcType=INTEGER},
      </if>
      <if test="payPrice != null" >
        pay_price = #{payPrice,jdbcType=DOUBLE},
      </if>
      <if test="isPay != null" >
        is_pay = #{isPay,jdbcType=TINYINT},
      </if>
      <if test="payTime != null" >
        pay_time = #{payTime,jdbcType=INTEGER},
      </if>
      <if test="isShip != null" >
        is_ship = #{isShip,jdbcType=TINYINT},
      </if>
      <if test="shipTime != null" >
        ship_time = #{shipTime,jdbcType=INTEGER},
      </if>
      <if test="isReceipt != null" >
        is_receipt = #{isReceipt,jdbcType=TINYINT},
      </if>
      <if test="receiptTime != null" >
        receipt_time = #{receiptTime,jdbcType=INTEGER},
      </if>
      <if test="shipNmber != null" >
        ship_nmber = #{shipNmber,jdbcType=VARCHAR},
      </if>
      <if test="status != null" >
        status = #{status,jdbcType=TINYINT},
      </if>
      <if test="createTime != null" >
        create_time = #{createTime,jdbcType=INTEGER},
      </if>
      <if test="updateTime != null" >
        update_time = #{updateTime,jdbcType=INTEGER},
      </if>
    </set>
    where id = #{id,jdbcType=INTEGER}
  </update>
  <update id="updateByPrimaryKey" parameterType="com.dongqilin.entity.OrderModel" >
    update t_order
    set user_id = #{userId,jdbcType=INTEGER},
      order_number = #{orderNumber,jdbcType=VARCHAR},
      uid = #{uid,jdbcType=INTEGER},
      pay_price = #{payPrice,jdbcType=DOUBLE},
      is_pay = #{isPay,jdbcType=TINYINT},
      pay_time = #{payTime,jdbcType=INTEGER},
      is_ship = #{isShip,jdbcType=TINYINT},
      ship_time = #{shipTime,jdbcType=INTEGER},
      is_receipt = #{isReceipt,jdbcType=TINYINT},
      receipt_time = #{receiptTime,jdbcType=INTEGER},
      ship_nmber = #{shipNmber,jdbcType=VARCHAR},
      status = #{status,jdbcType=TINYINT},
      create_time = #{createTime,jdbcType=INTEGER},
      update_time = #{updateTime,jdbcType=INTEGER}
    where id = #{id,jdbcType=INTEGER}
  </update>
</mapper>